<JZML>
<PROJECT version="5400" width="1024" height="724" osc_target="-1" midi_target="-1" kbmouse_target="-1" skin="Flat"/>
<WINDOW class="JAZZINTERFACE" text="Interface" x="0" y="0" width="1024" height="724" id="25" state="1" group="0" font="tahoma,11,0" >
<WINDOW class="Container" text="Instructions" x="42" y="334" width="680" height="284" id="31" state="1" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8388608" label="1" tabbar="1" meta="1">
<WINDOW class="Tab" text="Basic Use" x="0" y="0" width="664" height="236" state="1" group="0" font="tahoma,11,0" >
<WINDOW class="Text" text="Text2" x="12" y="175" width="652" height="27" id="28" state="85" group="0" font="tahoma,14,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8355711" content="- Clear the console by double-tapping the screen">
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/Text2/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
</WINDOW>
<WINDOW class="CustomButton" text="CustomButton" x="520" y="13" width="116" height="48" id="31" state="241" group="0" font="tahoma,16,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" behavior="1" bitmap="0,0" capture="1" color="1596013,20480" label_off="Tap Me" label_on="Tap Me" outline="1">
<PARAM name="x=" value="0.000000" send="17" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton/x" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" osc_scale="0.000000,1.000000" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="tapCount=0" send="1" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton/tapCount" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="199,1,0" kbmouse_scale="0,1,0,1"/>
<SCRIPT name="onLoad()" script="// Initialize the tap count to 0 when the project loads
tapCount = 0;" trigger_script="" trigger_type="5" trigger="1" clock="0" clock_div="4" osc_message="/Instructions/CustomButton/onLoad" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
<SCRIPT name="onX()" script="// Increment the tap count by 1
tapCount = tapCount + 1;

// Print to console
MKConsole.print('The button has been tapped ' + tapCount + ' times');

" trigger_script="x" trigger_type="0" trigger="2" clock="0" clock_div="4" osc_message="/Instructions/CustomButton/onX" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
</WINDOW>
<WINDOW class="Text" text="Text5" x="12" y="150" width="449" height="25" id="33" state="85" group="0" font="tahoma,14,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8355711" content="- Resize the console and it will adapt automatically">
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/Text5/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
</WINDOW>
<WINDOW class="Text" text="Text3" x="12" y="202" width="652" height="27" id="36" state="85" group="0" font="tahoma,14,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8355711" content="- Scroll the console by swipng the screen area, or by dragging the scroll bars">
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/Text3/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
</WINDOW>
<WINDOW class="Text" text="Text8" x="23" y="20" width="372" height="48" id="37" state="85" group="0" font="tahoma,14,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8355711" content="MKConsole allows you to log helpful messages for debugging. Give it a try by tapping the button.">
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/Text8/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
</WINDOW>
<WINDOW class="Text" text="Text9" x="23" y="78" width="556" height="61" id="38" state="85" group="0" font="tahoma,14,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8355711" content="To print to the console, call `MKConsole.print(value)` and replace `value` with some helpful text. To see a code example, take a look inside the Tap Me button, and find the `onX` script.">
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/Text9/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
</WINDOW>
</WINDOW>
<WINDOW class="Tab" text="Customization" x="0" y="0" width="664" height="236" id="1" state="0" group="0" font="tahoma,11,0" >
<WINDOW class="Text" text="Text4" x="12" y="7" width="652" height="30" id="28" state="85" group="0" font="tahoma,14,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8355711" content="Customize the console by changing its various settings such as `fontSize` or `textColor`">
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/Text4/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
</WINDOW>
<WINDOW class="Text" text="Text7" x="12" y="51" width="618" height="30" id="29" state="85" group="0" font="tahoma,14,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8355711" content="- Set the initial settings inside the console's `init()` script">
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/Text7/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
</WINDOW>
<WINDOW class="Text" text="Text10" x="12" y="81" width="618" height="62" id="30" state="85" group="0" font="tahoma,14,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8355711" content="- Whenever you make a change to one of these settings, be sure to call `refresh()` to redraw the console. Take a look at some of the examples below:">
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/Text10/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
</WINDOW>
<WINDOW class="CustomButton" text="CustomButton2" x="494" y="143" width="150" height="52" id="31" state="241" group="0" font="tahoma,20,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" behavior="1" bitmap="0,0" capture="1" color="865343,1596013" label_off="Gray" label_on="Gray" outline="1">
<PARAM name="x=" value="0.000000" send="17" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton2/x" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" osc_scale="0.000000,1.000000" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton2/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<SCRIPT name="onX()" script="MKConsole.backgroundColor = 0.1;
MKConsole.fontSize = 12;
MKConsole.maxLineWidth = 3000;
MKConsole.padding = 3;
MKConsole.rowSpacing = 2;
MKConsole.scrollBarBackgroundColor = 0.07;
MKConsole.scrollBarSize = 22;
MKConsole.scrollIndicatorColor = 0.2;
MKConsole.textColor = 1;
MKConsole.refresh();" trigger_script="x" trigger_type="0" trigger="2" clock="0" clock_div="4" osc_message="/Instructions/CustomButton2/onX" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
</WINDOW>
<WINDOW class="CustomButton" text="CustomButton3" x="166" y="143" width="139" height="52" id="32" state="241" group="0" font="tahoma,20,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" behavior="1" bitmap="0,0" capture="1" color="865343,1596013" label_off="Blue" label_on="Blue" outline="1">
<PARAM name="x=" value="0.000000" send="17" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton3/x" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" osc_scale="0.000000,1.000000" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton3/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<SCRIPT name="onX()" script="MKConsole.backgroundColor = {1, 10/255, 25/255, 49/255};
MKConsole.textColor = {1, 100/255, 200/255, 240/255};
MKConsole.scrollIndicatorColor = {1, 72/255, 169/255, 166/255};
MKConsole.scrollBarBackgroundColor = {1, 35/255, 71/255, 95/255};
MKConsole.scrollBarSize = 18;
MKConsole.fontSize = 13;
MKConsole.refresh();" trigger_script="x" trigger_type="0" trigger="2" clock="0" clock_div="4" osc_message="/Instructions/CustomButton3/onX" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
</WINDOW>
<WINDOW class="CustomButton" text="CustomButton4" x="12" y="143" width="145" height="52" id="33" state="241" group="0" font="tahoma,20,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" behavior="1" bitmap="0,0" capture="1" color="865343,1596013" label_off="Green" label_on="Green" outline="1">
<PARAM name="x=" value="0.000000" send="17" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton4/x" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" osc_scale="0.000000,1.000000" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton4/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<SCRIPT name="onX()" script="MKConsole.textColor = {1, 0, 1, 0};
MKConsole.backgroundColor = {1, 0, 0.2, 0};
MKConsole.scrollIndicatorColor = {1, 0, 0.5, 0};
MKConsole.scrollBarBackgroundColor = {1, 0, 0.333, 0};
MKConsole.fontSize = 17;
MKConsole.scrollBarSize = 30;
MKConsole.refresh();" trigger_script="x" trigger_type="0" trigger="2" clock="0" clock_div="4" osc_message="/Instructions/CustomButton4/onX" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
</WINDOW>
<WINDOW class="CustomButton" text="CustomButton5" x="322" y="143" width="150" height="52" id="34" state="241" group="0" font="tahoma,20,0" send="1" osc_target="-2" midi_target="-2" kbmouse_target="-2" behavior="1" bitmap="0,0" capture="1" color="865343,1596013" label_off="White" label_on="White" outline="1">
<PARAM name="x=" value="0.000000" send="17" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton5/x" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" osc_scale="0.000000,1.000000" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="light=0" send="0" osc_target="0" osc_trigger="1" osc_message="/Instructions/CustomButton5/light" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<SCRIPT name="onX()" script="MKConsole.backgroundColor = 1;
MKConsole.scrollBarBackgroundColor = 0.5;
MKConsole.scrollIndicatorColor = 0.7;
MKConsole.textColor = 0;
MKConsole.scrollBarSize = 22;
MKConsole.fontSize = 13;
MKConsole.refresh();" trigger_script="x" trigger_type="0" trigger="2" clock="0" clock_div="4" osc_message="/Instructions/CustomButton5/onX" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
</WINDOW>
</WINDOW>
</WINDOW>
<WINDOW class="Container" text="MKConsole" x="42" y="41" width="680" height="268" id="32" state="1" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="1052688" label="1" tabbar="1" meta="0">
<WINDOW class="Container" text="_" x="-8" y="-8" width="680" height="268" id="22" state="1" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8388608" label="1" tabbar="1" meta="0">
<WINDOW class="Container" text="UI" x="-8" y="-8" width="680" height="268" id="1" state="1" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="8421376" label="1" tabbar="1" meta="0">
<WINDOW class="Canvas" text="Screen" x="0" y="0" width="640" height="228" id="4" state="5" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" capture="1" redrawMode="1" touchSupport="1">
<VARIABLE name="touchReferencePoint={0, 0}" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/Screen/touchReferencePoint" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="9727,255,-1" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="isScrollingHorizontally=0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/Screen/isScrollingHorizontally" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="25955,10611,8226" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="horizontalScrollReferencePoint=" value="0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/Screen/horizontalScrollReferencePoint" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,-28116,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="lastTapTime=-1" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/Screen/lastTapTime" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<SCRIPT name="bounds()" script="return replace(getobjectrect(getobject()), {0, 0}, 0);" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/Screen/bounds" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="onRedraw()" script="decl this = getobject();

canvas_clear(this);

decl bounds = bounds();
decl numRows = LayoutCalculator.numRows();
decl rowHeight = LayoutCalculator.rowHeight();
decl padding = LayoutCalculator.adjustedPadding();

canvas_setFontSize(this, fontSize);
canvas_setTextBaseline(this, textBaselineMiddle);


decl ty = 0, i;
for (i = 0; i < numRows; i++) {
	canvas_setFillStyle(this, backgroundColor);
	canvas_fillRect(this, 0, ty, bounds[2], rowHeight);
	canvas_setFillStyle(this, textColor);
	decl lineIndex = scrolledLine + i;
	if (lineIndex <= numberOfLinesPrinted()) {
		canvas_fillText(this, textForLine(lineIndex), max(padding, 8) + horizontalScroll, ty + (rowHeight/2), maxLineWidth);
	}
	ty += rowHeight + rowSpacing;
}
" trigger_script="" trigger_type="255" trigger_name="onRedraw" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/Screen/onRedraw" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
<SCRIPT name="onCursorDown(cursor,hit,x,y)" script="// Clear on double tap
decl isFastDoubleTap = abs((time * 1000) - (lastTapTime * 1000)) < 200;
decl isSimilarX = abs(x - touchReferencePoint[0]) < 10;
decl isSimilarY = abs(y - touchReferencePoint[1]) < 10;
if (isFastDoubleTap && isSimilarX && isSimilarY) {
	clear();
} 

lastTapTime = time;
touchReferencePoint = {x, y};
horizontalScrollReferencePoint = horizontalScroll;

" trigger_script="" trigger_type="255" trigger_name="onCursorDown" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/Screen/onCursorDown" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
<SCRIPT name="onCursorMove(cursor,hit,x,y)" script="decl distanceTravelled = {
	x - touchReferencePoint[0],
	y - touchReferencePoint[1]
};

// Determine scroll direction

decl minimumTravelDistanceToRecognizeVerticalScroll = 8;
decl minimumTravelDistanceToRecognizeHorizontalScroll = 60;

if (!isScrollingHorizontally) {
	if (abs(distanceTravelled[0]) > minimumTravelDistanceToRecognizeHorizontalScroll) {
		isScrollingHorizontally = 1;
		touchReferencePoint = {x, y};
		return;
	} else {
		isScrollingHorizontally = 0;
	}
}

if (isScrollingHorizontally) {

	// Scroll horizontally

	scrollHorizontally((distanceTravelled[0] - (horizontalScrollReferencePoint)));
	touchReferencePoint = {x, y};
	horizontalScrollReferencePoint = horizontalScroll;

} else {
	
	// Scroll vertically

	decl linesScrolledVertically = 0;
	if (distanceTravelled[1] > minimumTravelDistanceToRecognizeVerticalScroll) {
		linesScrolledVertically = -1;
	} else if (distanceTravelled[1] < -minimumTravelDistanceToRecognizeVerticalScroll) {
		linesScrolledVertically = 1;
	}
	if (linesScrolledVertically != 0) {
		scrollToLine(scrolledLine + linesScrolledVertically);
		touchReferencePoint = {x, y};
	}	
}

" trigger_script="" trigger_type="255" trigger_name="onCursorMove" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/Screen/onCursorMove" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
<SCRIPT name="onCursorUp(cursor,hit,x,y)" script="touchReferencePoint = {x, y};
isScrollingHorizontally = 0;" trigger_script="" trigger_type="255" trigger_name="onCursorUp" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/Screen/onCursorUp" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
</WINDOW>
<WINDOW class="Canvas" text="VerticalScrollBar" x="642" y="0" width="22" height="228" id="12" state="5" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" capture="1" redrawMode="1" touchSupport="1">
<SCRIPT name="onRedraw()" script="decl this = getobject();

canvas_clear(this);

decl bounds = bounds();
decl scrollIndicatorHeight = scrollIndicatorHeight();
decl horizontalPadding = 2;

// Draw Background
canvas_setFillStyle(this, scrollBarBackgroundColor);
canvas_fillRect(this, 0, 0, bounds[2], bounds[3]);

if (numberOfLinesPrinted() == 0) {
    return;
}

// Draw Scroll Indicator
canvas_setFillStyle(this, scrollIndicatorColor);
canvas_fillRect(this, 
    horizontalPadding,
    (bounds[3] - scrollIndicatorHeight) * (scrolledLine / maxScrollableLine()), 
    bounds[2] - (2 * horizontalPadding), 
    scrollIndicatorHeight
);

// Add Hit Regions
canvas_addHitRegion(this, 0, 1);
" trigger_script="" trigger_type="255" trigger_name="onRedraw" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/VerticalScrollBar/onRedraw" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
<SCRIPT name="bounds()" script="return replace(getobjectrect(getobject()), {0, 0}, 0);" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/VerticalScrollBar/bounds" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="onCursorMove(cursor,hit,x,y)" script="if (numberOfLinesPrinted() == 0) {
	return;
}

decl bounds = bounds();
decl scrollIndicatorHeight = scrollIndicatorHeight();
decl touchOffset = scrollIndicatorHeight / 2;
decl touchLocationPercent = min(max((y - touchOffset) / (bounds[3] - scrollIndicatorHeight), 0), 1);

// Calculate the new line based on the touch position
decl newLine = floor(touchLocationPercent * maxScrollableLine());
scrollToLine(newLine);
" trigger_script="" trigger_type="255" trigger_name="onCursorMove" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/VerticalScrollBar/onCursorMove" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
<SCRIPT name="scrollIndicatorHeight()" script="decl visiblePercentOfTotal;
if (numberOfLinesPrinted() == 0) {
	visiblePercentOfTotal = 1;
} else {
 	visiblePercentOfTotal = LayoutCalculator.numRows() / (numberOfLinesPrinted() - 1);
}
return max(visiblePercentOfTotal * bounds()[3], 32);" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/VerticalScrollBar/scrollIndicatorHeight" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
</WINDOW>
<WINDOW class="Canvas" text="HorizontalScrollBar" x="0" y="230" width="640" height="22" id="13" state="5" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" capture="1" redrawMode="1" touchSupport="1">
<SCRIPT name="onRedraw()" script="decl this = getobject();

canvas_clear(this);

decl bounds = bounds();

// Draw Background
canvas_setFillStyle(this, scrollBarBackgroundColor);
canvas_fillRect(this, 0, 0, bounds[2], bounds[3]);

if (numberOfLinesPrinted() == 0) {
	return;
}

// Draw Scroll Indicator
canvas_setFillStyle(this, scrollIndicatorColor);
decl scrollIndicatorWidth = scrollIndicatorWidth();
canvas_fillRect(this, 
	-1 * (horizontalScroll/maxLineWidth) * (bounds[2] - scrollIndicatorWidth), 
	2,
	scrollIndicatorWidth, 
	bounds[3] - 4
);

// Add Hit Regions
canvas_addHitRegion(this, 0, 1);" trigger_script="" trigger_type="255" trigger_name="onRedraw" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/HorizontalScrollBar/onRedraw" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
<SCRIPT name="bounds()" script="return replace(getobjectrect(getobject()), {0, 0}, 0);" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/HorizontalScrollBar/bounds" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="onCursorMove(cursor,hit,x,y)" script="decl bounds = bounds();
decl scrollIndicatorWidth = scrollIndicatorWidth();
decl xOffset = x - (scrollIndicatorWidth / 2);
decl adjustedWidth = bounds[2] - scrollIndicatorWidth();
scrollHorizontally((xOffset/adjustedWidth) *  maxLineWidth);

" trigger_script="" trigger_type="255" trigger_name="onCursorMove" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/HorizontalScrollBar/onCursorMove" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
<SCRIPT name="scrollIndicatorWidth()" script="if (maxLineWidth <= 0) {
	return 0;
}
return  (bounds()[2] / maxLineWidth) * bounds()[2];" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/HorizontalScrollBar/scrollIndicatorWidth" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
</WINDOW>
<WINDOW class="Canvas" text="ScrollBarCorner" x="642" y="230" width="22" height="22" id="15" state="5" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" capture="1" redrawMode="1" touchSupport="1">
<SCRIPT name="onRedraw()" script="decl this = getobject();
decl bounds = replace(getobjectrect(this), {0, 0}, 0);
canvas_setFillStyle(this, scrollBarBackgroundColor);
canvas_fillRect(this, 0, 0, bounds[2], bounds[3]);
" trigger_script="" trigger_type="255" trigger_name="onRedraw" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/ScrollBarCorner/onRedraw" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
</WINDOW>
<WINDOW class="Container" text="LayoutCalculator" x="1024" y="1024" width="32" height="32" id="16" state="0" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="1596013" label="1" tabbar="1" meta="0">
<WINDOW class="Container" text="_private" x="0" y="0" width="111" height="65" id="12" state="0" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="1596013" label="1" tabbar="1" meta="0">
<VARIABLE name="_lastBounds=" value="-1,-1,-1,-1" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/LayoutCalculator/_private/_lastBounds" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="_rowHeight=" value="26.444447" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/LayoutCalculator/_private/_rowHeight" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="_numRows=" value="9" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/LayoutCalculator/_private/_numRows" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="_adjustedPadding=" value="4.222221" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/LayoutCalculator/_private/_adjustedPadding" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<SCRIPT name="recalculateLayoutIfNeeded()" script="decl bounds = replace(getobjectrect(Screen), {0, 0}, 0);

if (_lastBounds[0] == bounds[0] &&  
	_lastBounds[1] == bounds[1] &&
	_lastBounds[2] == bounds[2] &&
	_lastBounds[3] == bounds[3]) {
	return;
}

_lastBounds = bounds;

decl fontSize = fontSize();
decl rowSpacing = rowSpacing();
decl maxPadding = padding();

decl fontHeight = approxFontHeight(fontSize);
decl availableHeight = bounds[3];

// Calculate the initial number of rows and the effective row height
decl numRows = floor((availableHeight + rowSpacing) / (fontHeight + rowSpacing + 2 * maxPadding));
decl effectiveRowHeight = (availableHeight + rowSpacing) / numRows - rowSpacing;
decl adjustedPadding = (effectiveRowHeight - fontHeight) / 2;

// Adjust the number of rows and padding until it fits perfectly
while (adjustedPadding < 0 && numRows > 1) {
	numRows -= 1;
	effectiveRowHeight = (availableHeight + rowSpacing) / numRows - rowSpacing;
    adjustedPadding = (effectiveRowHeight - fontHeight) / 2;
}

_numRows = numRows;
_adjustedPadding = adjustedPadding;
_rowHeight = effectiveRowHeight;

" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/LayoutCalculator/_private/recalculateLayoutIfNeeded" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="approxFontHeight(fontSize)" script="decl fontSizes = {8, 10, 14, 15, 16, 18, 20, 25};
decl lineHeights = {14, 14, 22, 22, 22, 24, 26, 32};
decl count = sizeof(fontSizes);

if (fontSize <= fontSizes[0]) {
	return lineHeights[0];
}

if (fontSize >= fontSizes[count - 1]) {
	return lineHeights[count - 1];
}

decl i;
for (i = 0; i < count - 1; i++) {
	if (fontSize >= fontSizes[i] && fontSize <= fontSizes[i + 1]) {
		decl x0 = fontSizes[i];
		decl y0 = lineHeights[i];
		decl x1 = fontSizes[i + 1];
		decl y1 = lineHeights[i + 1];
		return y0 + ((fontSize - x0) * (y1 - y0) / (x1 - x0));
	}
}" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/LayoutCalculator/_private/approxFontHeight" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="onLoad()" script="_lastBounds = {-1, -1, -1, -1};
recalculateLayoutIfNeeded();

show(getobject(), 0);" trigger_script="" trigger_type="5" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/LayoutCalculator/_private/onLoad" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
</WINDOW>
<SCRIPT name="rowHeight()" script="_private.recalculateLayoutIfNeeded();
return _private._rowHeight;" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/LayoutCalculator/rowHeight" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="numRows()" script="_private.recalculateLayoutIfNeeded();
return _private._numRows;" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/LayoutCalculator/numRows" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="adjustedPadding()" script="_private.recalculateLayoutIfNeeded();
return _private._adjustedPadding;" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/LayoutCalculator/adjustedPadding" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
</WINDOW>
<VARIABLE name="scrolledLine=0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/scrolledLine" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="713,1,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="horizontalScroll=0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/horizontalScroll" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="didScrollToLastLine=0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/UI/didScrollToLastLine" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<SCRIPT name="scrollToLine(line)" script="decl newLine = line;
decl minLine = 0;
decl numRows = LayoutCalculator.numRows();
decl numberOfLinesPrinted = numberOfLinesPrinted();
decl maxLine = max(numberOfLinesPrinted - numRows, minLine);

scrolledLine = min(max(line, minLine), maxLine);

if (scrolledLine >= max(numberOfLinesPrinted - numRows - 1, 0)) {
	didScrollToLastLine = 1;
} else {
    didScrollToLastLine = 0;
}

refresh();" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/scrollToLine" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="scrollHorizontally(x)" script="horizontalScroll = -1 * min(max(x, 0), maxLineWidth);
refresh();" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/scrollHorizontally" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="refresh()" script="canvas_refresh(Screen);
canvas_refresh(VerticalScrollBar);
canvas_refresh(HorizontalScrollBar);
canvas_refresh(ScrollBarCorner);
" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/refresh" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="textForLine(line)" script="return Buffer.readLine(line);" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/textForLine" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="bufferDidClear()" script="scrollToLine(0);" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/bufferDidClear" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="bufferDidWriteLine(line)" script="
    // Refresh the UI to reflect the new line
    UI.refresh();

    // Scroll to the bottom if the user was at the bottom before the update
    if (didScrollToLastLine) {
        scrollToLine(maxScrollableLine());
    }
/*
decl atBottom = (scrolledLine >= maxScrollableLine());
if (atBottom) {
	scrollToLine(maxScrollableLine());
}
refresh();
*/" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/bufferDidWriteLine" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="maxScrollableLine()" script="return max(numberOfLinesPrinted() - LayoutCalculator.numRows(), 0);

" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/maxScrollableLine" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="numberOfLinesPrinted()" script="return Buffer.count();" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/UI/numberOfLinesPrinted" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
</WINDOW>
<WINDOW class="Container" text="Buffer" x="0" y="0" width="32" height="32" id="15" state="0" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="1596013" label="1" tabbar="1" meta="0">
<WINDOW class="Container" text="_private" x="0" y="0" width="32" height="32" id="22" state="0" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="1596013" label="1" tabbar="1" meta="0">
<VARIABLE name="_1=" value="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/Buffer/_private/_1" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="_0=" value="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/Buffer/_private/_0" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="tail=" value="0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/Buffer/_private/tail" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="capacity=" value="1280" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/Buffer/_private/capacity" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<FUNCTION name="bufferWidth()=256" send="1"/>
<VARIABLE name="_2=" value="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/Buffer/_private/_2" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="_3=" value="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/Buffer/_private/_3" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="_4=" value="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/_/Buffer/_private/_4" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
</WINDOW>
<SCRIPT name="clear()" script="_private.tail = 0;

decl sentinel = 'nil';
decl bufferCount = 0;

while (1) {
	decl bufferName = '_' + bufferCount;
	setexpression(_private, bufferName, sentinel);
	if (getexpression(_private, bufferName) != sentinel) {
		break;
	} else {
		setexpression(_private, bufferName, fill(1, 0, _private.bufferWidth()));
		bufferCount++;
	}
}

_private.capacity = _private.bufferWidth() * bufferCount;


UI.bufferDidClear();" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/Buffer/clear" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="writeLine(text)" script="if (_private.tail == _private.capacity) {
	clear();
}
decl oldTail = _private.tail;
decl bufferName = '_' + floor(_private.tail/_private.bufferWidth());
decl elementIndex = _private.tail % _private.bufferWidth();
decl buffer = getexpression(_private, bufferName);
buffer = set(buffer, '' + text, elementIndex);
setexpression(_private, bufferName, buffer);
UI.bufferDidWriteLine(_private.tail++);
" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/Buffer/writeLine" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="readLine(index)" script="index = min(max(index, 0), _private.capacity - 1);
decl bufferName = '_' + floor(index / _private.bufferWidth());
decl elementIndex = index % _private.bufferWidth();
return getexpression(_private, bufferName)[elementIndex];" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/Buffer/readLine" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="count()" script="_private.tail;" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/Buffer/count" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
</WINDOW>
<WINDOW class="Container" text="Helpers" x="1024" y="1024" width="32" height="32" id="16" state="0" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="1596013" label="1" tabbar="1" meta="0">
<SCRIPT name="objectToText(object)" script="decl result = 'Object: name= ';
result += getattribute(object, 'name') + ', ';
decl rect = getobjectrect(object);
if (sizeof(rect) > 1) {
	result += 'frame= ' + arrayToText(rect) + ', ';
}
result += 'path= ' + objectPathToText(object);
return result;" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/Helpers/objectToText" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="objectPathToText(object)" script="decl result = '/' + getattribute(object, 'name');
decl parent = getparent(object);
while (getparent(parent) != 0) {
	result = '/' + getattribute(parent, 'name') + result;
	parent = getparent(parent);
}

return result;" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/Helpers/objectPathToText" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="arrayToText(array)" script="decl result = '{';
decl size = sizeof(array);
decl i;
for (i = 0; i < size; i++) {
	if (isObject(array[i])) {
		result += getattribute(array[i], 'name');
	} else {
		result += '' + array[i];
	}
	if (i < size - 1) {
		result += ', ';
	}
}
result += '}';
return result;" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/Helpers/arrayToText" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="valueToText(value)" script="if (sizeof(value) > 1) {
	return arrayToText(value);
} else if (isObject(value)) {
	return objectToText(value);
} else {
	return '' + value;
}
" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/Helpers/valueToText" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="isObject(value)" script="return sizeof(getobjectrect(value)) > 1;" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/Helpers/isObject" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
</WINDOW>
<WINDOW class="Container" text="_Software_License_Agreement" x="0" y="0" width="32" height="32" id="396" state="0" group="0" font="tahoma,10,0" send="0" osc_target="-2" midi_target="-2" kbmouse_target="-2" color="1596013" label="1" tabbar="1" meta="0">
<SCRIPT name="Software_License_Agreement()" script="/*
Copyright (c) 2024 MIDI Kinetics

Permission is hereby granted, free of charge, to any person obtaining a copy of this software 
and associated documentation files (the \"Software\"), to deal in the Software without restriction, 
including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, 
subject to the following condition:

The above copyright notice and this permission notice shall be included 
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, I
NCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS 
OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
IN THE SOFTWARE.
*/" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/_Software_License_Agreement/Software_License_Agreement" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
</WINDOW>
<SCRIPT name="onLoad()" script="configureLayout();
init();
_refresh();" trigger_script="" trigger_type="5" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/onLoad" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
<SCRIPT name="onRect()" script="configureLayout();
_refresh();" trigger_script="getobjectrect(getparent(_))" trigger_type="0" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/onRect" midi_message="0x90,0x90,0,0" midi_target="-1" flag="1"/>
<SCRIPT name="_print(value)" script="Buffer.writeLine(Helpers.valueToText(value));" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/_print" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="_clear()" script="Buffer.clear();" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/_clear" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="_refresh()" script="configureLayout();
UI.refresh();" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/_refresh" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="configureLayout()" script="decl this = getobject();

decl bounds = replace(getobjectrect(getparent(this)), {0, 0}, 0) - {0, 0, 16, 16};

setobjectrect(this, {
	-8, 
	-8, 
	bounds[2] + 16, 
	bounds[3] + 16
});

setobjectrect(UI, getobjectrect(this));

decl spacing = 2;

setobjectrect(UI.Screen, {
	bounds[0], 
	bounds[1], 
	bounds[2] - scrollBarSize - spacing,
	bounds[3] - scrollBarSize - spacing
});

setobjectrect(UI.VerticalScrollBar, {
	bounds[2] - scrollBarSize, 
	bounds[1],
	scrollBarSize,
	bounds[3] - scrollBarSize - spacing
});

setobjectrect(UI.HorizontalScrollBar, {
	bounds[0],
	bounds[3] - scrollBarSize,
	bounds[2] - scrollBarSize - spacing,
	scrollBarSize
});


setobjectrect(UI.ScrollBarCorner, {
	bounds[2] - scrollBarSize,
	bounds[3] - scrollBarSize,
	scrollBarSize,
	scrollBarSize
});" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/_/configureLayout" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
</WINDOW>
<VARIABLE name="backgroundColor=" value="0.100000" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/backgroundColor" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="225,1,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="fontSize=" value="12" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/fontSize" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="maxLineWidth=" value="3000" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/maxLineWidth" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="padding=" value="3" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/padding" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="rowSpacing=" value="2" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/rowSpacing" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="scrollBarBackgroundColor=" value="0.070000" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/scrollBarBackgroundColor" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="scrollBarSize=" value="22" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/scrollBarSize" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="scrollIndicatorColor=" value="0.200000" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/scrollIndicatorColor" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<VARIABLE name="textColor=" value="1" send="0" osc_target="0" osc_trigger="1" osc_message="/MKConsole/textColor" midi_target="-1" midi_trigger="1" midi_message="0x90,0x90,0,0" midi_scale="0,16383" kbmouse_target="-1" kbmouse_trigger="1" kbmouse_message="0,0,0" kbmouse_scale="0,1,0,1"/>
<SCRIPT name="print(value)" script="/**
 * Prints a value to the console
 *
 * @param (*) value - The value to be printed.
 *
 * You can pass any value into this method (e.g. arrays, floats, objects) and the console will 
 * will attempt to automatically format it into a human-readable string. 
 *
 */


_._print(value); // DO NOT DELETE THIS LINE" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/print" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="clear()" script="/**
 * Clears the console of text.
 */

_._clear(); // DO NOT DELETE THIS LINE" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/clear" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="init()" script="/**
 * Initializes the console. Use this code to configure the initial settings.
 */


backgroundColor = 0.1;
fontSize = 12;
maxLineWidth = 3000;
padding = 3;
rowSpacing = 2;
scrollBarBackgroundColor = 0.07;
scrollBarSize = 22;
scrollIndicatorColor = 0.2;
textColor = 1;" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/init" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
<SCRIPT name="refresh()" script="/**
 * Informs the console that it needs to be redrawn.
 *
 * Call this whenever you change one of the style settings, such as the text color.
 *
 * Try not to call this script too frequently as it will impact performance. Rather, perform
 * all your configuration first, and then call refresh only once to batch all the changes together.
 *
 * Example usage: 
 * 
 * MKConsole.textColor = {1, 1, 0, 0}; // red
 * MKConsole.backgroundColor = {1, 0, 1, 0}; // green
 * MKConsole.refresh();
 *
 */


_._refresh(); // DO NOT DELETE THIS LINE" trigger_script="" trigger_type="4" trigger="1" clock="0" clock_div="4" osc_message="/MKConsole/refresh" midi_message="0x90,0x90,0,0" midi_target="-1" flag="0"/>
</WINDOW>
</WINDOW>
</JZML>
